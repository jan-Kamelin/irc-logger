// Generated by CoffeeScript 1.10.0
var channels, lastLoggedDay, net, now, port, ref, register, sendLog, sendMsg, server, serverName, showPostMsgHelp, singleChannel, user,
  slice = [].slice;

net = require('net');

require('colors').enabled = true;

ref = require('config'), serverName = ref.serverName, port = ref.port, user = ref.user, channels = ref.channels;

singleChannel = channels.length === 1;

channels = channels.join(',');

server = net.connect(port, serverName, function() {
  server.setEncoding('utf8');
  return console.log(("Connected to: " + serverName + " on port " + port).cyan);
});

register = function() {
  sendMsg("NICK " + user);
  return sendMsg('USER test 1 * :Hello!');
};

lastLoggedDay = null;

now = function() {
  var day, ref1, rest;
  ref1 = new Date().toISOString().split('T'), day = ref1[0], rest = ref1[1];
  if (day !== lastLoggedDay) {
    console.log(("--------------" + day + "--------------").yellow);
    lastLoggedDay = day;
  }
  return rest.split('.')[0];
};

sendLog = function(chan, user_, msg) {
  var logMsg;
  logMsg = "[" + (now()) + "] <" + user_ + "> " + msg;
  if (!singleChannel) {
    logMsg = "[" + chan + "]" + logMsg;
  }
  return console.log(logMsg);
};

sendMsg = function(msg) {
  return server.write(msg + "\r\n");
};

server.on('connect', register);

server.on('data', function(buf) {
  var chan, code, i, len, message, messages, msg, parts, ref1, ref2, rest, results, sender, text;
  message = buf.toString();
  parts = message.split(' ');
  if (parts[0] === 'PING') {
    return sendMsg('PONG ' + parts[1]);
  }
  messages = message.split('\r\n');
  results = [];
  for (i = 0, len = messages.length; i < len; i++) {
    msg = messages[i];
    ref1 = msg.split(' '), sender = ref1[0], code = ref1[1], chan = ref1[2], rest = 4 <= ref1.length ? slice.call(ref1, 3) : [];
    sender = (ref2 = sender.match(/\w+/)) != null ? ref2.toString() : void 0;
    text = rest.join(' ').slice(1);
    if (code != null) {
      switch (code) {
        case '433':
          user += '_';
          results.push(register());
          break;
        case '376':
          results.push(server.write("JOIN " + channels + " \r\n"));
          break;
        case 'PRIVMSG':
          results.push(sendLog(chan.green, sender.cyan, text));
          break;
        case 'JOIN':
          sendLog(chan.grey, sender.grey, 'has joined.'.grey);
          if (singleChannel) {
            results.push(showPostMsgHelp());
          } else {
            results.push(void 0);
          }
          break;
        case 'QUIT':
          results.push(sendLog(chan.grey, sender.grey, 'has quit.'.grey));
          break;
        default:
          if (code[0] === '4') {
            results.push(console.log('error'.red, message));
          } else {
            results.push(void 0);
          }
      }
    } else {
      results.push(void 0);
    }
  }
  return results;
});

server.on('error', function(err) {
  return console.log('err'.red, err);
});

if (singleChannel) {
  process.stdin.on('data', function(buf) {
    var msg;
    msg = buf.toString();
    server.write("PRIVMSG " + channels + " :" + msg + "\r\n");
    return sendLog(null, user.green, msg);
  });
}

showPostMsgHelp = function() {
  return console.log('Type your text and press Enter to send a message'.green);
};
